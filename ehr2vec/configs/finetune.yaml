env: local
paths:
  data_path: "../outputs/data_icd10"
  model_path: "outputs/pretraining/behrt_plus_test"
  checkpoint_epoch: 2
  outcome: "outputs/outcomes/TEST_CENSOR/TEST_CENSOR.pt"
  # censor: "outputs/outcomes/TEST/TEST.pt"
  #output_path: "outputs/finetuning"
  run_name: "test"
  # tokenized_dir: "tokenized"

model:
  pool_type: "mean"

data:
  num_train_patients: null #300
  num_val_patients: null #100
  truncation_len: 60
  select_censored: true
  # gender: M
  min_age: 0
  max_age: 100
  # min_len: null

outcome: 
  type: TEST_CENSOR
  n_hours: 0 # censor time
  censor_type: TEST_OUTCOME

trainer_args:
  sampler: true
  pos_weight: null
  batch_size: 8
  val_batch_size: 32
  effective_batch_size: 16
  epochs: 2
  info: true
  gradient_clip: 
    clip_value: 1.0
  mixed_precision: false
  shuffle: true
  
optimizer:
  lr: 5e-4
  eps: 1e-6

scheduler:
  _target_: transformers.get_constant_schedule_with_warmup
  num_warmup_steps: 10
  #num_training_steps: 100

metrics:
  accuracy:
    _target_: evaluation.metrics.Accuracy
  balanced_accuracy:
    _target_: evaluation.metrics.Balanced_Accuracy
  precision:
    _target_: evaluation.metrics.Precision
  recall:
    _target_: evaluation.metrics.Recall
  roc_auc:
    _target_: evaluation.metrics.ROC_AUC
  pr_auc:
    _target_: evaluation.metrics.PR_AUC
  f1:
    _target_: evaluation.metrics.F1
  precentage_positives:
    _target_: evaluation.metrics.Percentage_Positives
  mean_probability:
    _target_: evaluation.metrics.Mean_Probability
  cohen_kappa:
    _target_: evaluation.metrics.Cohen_Kappa
  mathews_correlation:
    _target_: evaluation.metrics.Mathews_Correlation_Coefficient
  
 
